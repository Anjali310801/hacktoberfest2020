package wrapp;
public class wrap {
public static void main(String[] args)
{
byte b=10;
short s=20;
int a=129;
long l=40;
float f=50.0F;
double d=60.0;
char c='a';
boolean b2=true;
Byte a1=new Byte(b);
Short a2=new Short (s);
Integer a3=new Integer(a);
Long a4=new Long(l);
Float a5=new Float(f);
Double a6=new Double(d);
Character a7=new Character(c);
Boolean a8=new Boolean(b2);
System.out.println("-------------wrapper function for BYTE PRIMITIVE DATA TYPE-------");
System.out.println("value of byte"+a1.byteValue());
System.out.println("byte "+a1.doubleValue());
System.out.println("byte "+a1.floatValue());
System.out.println("byte "+a1.hashCode());
System.out.println("byte "+a1.intValue());
System.out.println("byte "+a1.longValue());
System.out.println("byte "+a1.shortValue());
System.out.println("byte(max value) "+a1.MAX_VALUE);
System.out.println("byte(min value) "+a1.MIN_VALUE);
System.out.println("-------------wrapper function for SHORT PRIMITIVE DATA TYPE-------");
System.out.println("SHORT "+a2.byteValue());
System.out.println("SHORT "+a2.doubleValue());
System.out.println("SHORT "+a2.floatValue());
System.out.println("SHORT "+a2.intValue());
System.out.println("SHORT "+a2.longValue());
System.out.println("SHORT "+a2.shortValue());
System.out.println("SHORT(bytes) "+a2.BYTES);
System.out.println("SHORT(max value) "+a2.MAX_VALUE);
System.out.println("SHORT(min value) "+a2.MIN_VALUE);
System.out.println("-------------wrapper function for INTEGER PRIMITIVE DATA TYPE-------");
System.out.println("integer "+a3.byteValue());
System.out.println("integer "+a3.doubleValue());
System.out.println("integer "+a3.floatValue());
System.out.println("integer "+a3.intValue());
System.out.println("integer "+a3.longValue());
System.out.println("integer "+a3.shortValue());
System.out.println("integer(bytes) "+a3.BYTES);
System.out.println("integer(max value) "+a3.MAX_VALUE);
System.out.println("integer(min value) "+a3.MIN_VALUE);
System.out.println("-------------wrapper function for long PRIMITIVE DATA TYPE-------");
System.out.println("long "+a4.byteValue());
System.out.println("long "+a4.doubleValue());
System.out.println("long "+a4.floatValue());
System.out.println("long "+a4.intValue());
System.out.println("long "+a4.longValue());
System.out.println("long "+a4.shortValue());
System.out.println("long(bytes) "+a4.BYTES);
System.out.println("long(max value) "+a4.MAX_VALUE);
System.out.println("long(min value) "+a4.MIN_VALUE);
System.out.println("-------------wrapper function for float PRIMITIVE DATA TYPE-------");
System.out.println("float "+a5.byteValue());
System.out.println("float "+a5.doubleValue());
System.out.println("float "+a5.floatValue());
System.out.println("float "+a5.intValue());
System.out.println("float "+a5.intValue());
System.out.println("float "+a5.longValue());
System.out.println("float "+a5.shortValue());
System.out.println("float(bytes) "+a5.BYTES);
System.out.println("float(max values) "+a5.MAX_VALUE);
System.out.println("float(min value) "+a5.MIN_VALUE);
System.out.println("-------------wrapper function for double PRIMITIVE DATA TYPE-------");
System.out.println("double "+a6.byteValue());
System.out.println("double "+a6.doubleValue());
System.out.println("double "+a6.floatValue());
System.out.println("double "+a6.intValue());
System.out.println("double "+a6.longValue());
System.out.println("double "+a6.shortValue());
System.out.println("double(bytes) "+a6.BYTES);
System.out.println("double(max value) "+a6.MAX_VALUE);
System.out.println("double(min value) "+a6.MIN_VALUE);
System.out.println("-------------wrapper function for character PRIMITIVE DATA TYPE-------");
System.out.println("character "+a7.charValue());
System.out.println("character "+a7.hashCode());
System.out.println("character(bytes) "+a7.BYTES);
System.out.println("character(max value) "+a7.MAX_VALUE);
System.out.println("character(max code point) "+a7.MAX_CODE_POINT);
System.out.println("-------------wrapper function for boolean PRIMITIVE DATA TYPE-------");
System.out.println("boolean "+a8.hashCode());
System.out.println("boolean "+a8.toString());
System.out.println("boolean "+a8.booleanValue());
System.out.println("boolean(false) "+a8.FALSE);
System.out.println("boolean(true) "+a8.TRUE);
}
}
